// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// KafkaTopicStatusConditionsElemApplyConfiguration represents an declarative configuration of the KafkaTopicStatusConditionsElem type for use
// with apply.
type KafkaTopicStatusConditionsElemApplyConfiguration struct {
	LastTransitionTime *string `json:"lastTransitionTime,omitempty"`
	Message            *string `json:"message,omitempty"`
	Reason             *string `json:"reason,omitempty"`
	Status             *string `json:"status,omitempty"`
	Type               *string `json:"type,omitempty"`
}

// KafkaTopicStatusConditionsElemApplyConfiguration constructs an declarative configuration of the KafkaTopicStatusConditionsElem type for use with
// apply.
func KafkaTopicStatusConditionsElem() *KafkaTopicStatusConditionsElemApplyConfiguration {
	return &KafkaTopicStatusConditionsElemApplyConfiguration{}
}

// WithLastTransitionTime sets the LastTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastTransitionTime field is set to the value of the last call.
func (b *KafkaTopicStatusConditionsElemApplyConfiguration) WithLastTransitionTime(value string) *KafkaTopicStatusConditionsElemApplyConfiguration {
	b.LastTransitionTime = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *KafkaTopicStatusConditionsElemApplyConfiguration) WithMessage(value string) *KafkaTopicStatusConditionsElemApplyConfiguration {
	b.Message = &value
	return b
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *KafkaTopicStatusConditionsElemApplyConfiguration) WithReason(value string) *KafkaTopicStatusConditionsElemApplyConfiguration {
	b.Reason = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *KafkaTopicStatusConditionsElemApplyConfiguration) WithStatus(value string) *KafkaTopicStatusConditionsElemApplyConfiguration {
	b.Status = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *KafkaTopicStatusConditionsElemApplyConfiguration) WithType(value string) *KafkaTopicStatusConditionsElemApplyConfiguration {
	b.Type = &value
	return b
}
