// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/bborbe/strimzi/k8s/apis/kafka.strimzi.io/v1beta2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KafkaTopicLister helps list KafkaTopics.
// All objects returned here must be treated as read-only.
type KafkaTopicLister interface {
	// List lists all KafkaTopics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.KafkaTopic, err error)
	// KafkaTopics returns an object that can list and get KafkaTopics.
	KafkaTopics(namespace string) KafkaTopicNamespaceLister
	KafkaTopicListerExpansion
}

// kafkaTopicLister implements the KafkaTopicLister interface.
type kafkaTopicLister struct {
	indexer cache.Indexer
}

// NewKafkaTopicLister returns a new KafkaTopicLister.
func NewKafkaTopicLister(indexer cache.Indexer) KafkaTopicLister {
	return &kafkaTopicLister{indexer: indexer}
}

// List lists all KafkaTopics in the indexer.
func (s *kafkaTopicLister) List(selector labels.Selector) (ret []*v1beta2.KafkaTopic, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.KafkaTopic))
	})
	return ret, err
}

// KafkaTopics returns an object that can list and get KafkaTopics.
func (s *kafkaTopicLister) KafkaTopics(namespace string) KafkaTopicNamespaceLister {
	return kafkaTopicNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KafkaTopicNamespaceLister helps list and get KafkaTopics.
// All objects returned here must be treated as read-only.
type KafkaTopicNamespaceLister interface {
	// List lists all KafkaTopics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.KafkaTopic, err error)
	// Get retrieves the KafkaTopic from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta2.KafkaTopic, error)
	KafkaTopicNamespaceListerExpansion
}

// kafkaTopicNamespaceLister implements the KafkaTopicNamespaceLister
// interface.
type kafkaTopicNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KafkaTopics in the indexer for a given namespace.
func (s kafkaTopicNamespaceLister) List(selector labels.Selector) (ret []*v1beta2.KafkaTopic, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.KafkaTopic))
	})
	return ret, err
}

// Get retrieves the KafkaTopic from the indexer for a given namespace and name.
func (s kafkaTopicNamespaceLister) Get(name string) (*v1beta2.KafkaTopic, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta2.Resource("kafkatopic"), name)
	}
	return obj.(*v1beta2.KafkaTopic), nil
}
